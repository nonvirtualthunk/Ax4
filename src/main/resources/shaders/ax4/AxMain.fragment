#version 150 core

//#extension GL_EXT_gpu_shader4 : enable

uniform sampler2D tex0;
uniform sampler2D fogTexture;

in vec3 positionV;
in vec2 texCoordV;
in vec4 colorV;
in float visionPcntV;

out vec4 o_FragColor;

void main (){
    //vec4 fogColor = texture(fogTexture, vec2(mod(positionV.x * 0.1,1.0), mod(positionV.y * 0.1,1.0)));
    vec4 fogColor = texture(fogTexture, mod(gl_FragCoord.xy * 0.001, vec2(1.0)));
    //float effVisionPcnt = step(0.75, visionPcntV);
    float effVisionPcnt = visionPcntV;
    //float effVisionPcnt = visionPcntV * visionPcntV;
    vec4 texColor = texture(tex0,texCoordV);
    if (texColor.a < 0.01) { discard; }
    //vec3 color = mix(fogColor.rgb, texColor.rgb * colorV.rgb, effVisionPcnt);
    vec3 color = texColor.rgb * colorV.rgb * effVisionPcnt;
//    o_FragColor = vec4(color,texColor.a * colorV.a);
    float gamma = 1.0;
    vec3 gammadColor = pow(color, vec3(1/gamma));
    o_FragColor = vec4(gammadColor.r, gammadColor.g, gammadColor.b, texColor.a * colorV.a);
}